var PublicSequence = React.createClass({

  getInitialState: function() {
      return { asanas: this.props.initialAsanas };
  },

  render: function() {
    var asanas = this.state.asanas.map(function(asana) {
      return <Asana key={asana.id} asana={asana} />;
    })
    return (
      <div className="asanas">
        {asanas}
      </div>
    );
  },

});

var SequenceSelector = React.createClass({

  getInitialState: function() {
      return { 
        asanas: this.props.initialAsanas,
      };
  },

  // addAsana: function() {
  //   var addedAsanas = []
  //   var self = $(this);
  //   console.log(this)
  //   // $(".asana-card").click(function() {
  //   //   var sanskritName = $(this).find(".sanskrit").text();
  //   //   addedAsanas.push(sanskritName);
  //   //   // $(this).find(".card-text").html("<h5>Added!</h5>").fadeIn();
  //   //   $(this).css("background", "grey");
  //   //   console.log(addedAsanas);
  //   // })
  // },

  // componentDidMount: function() {
  //   this.addAsana()
  // },

  render: function() {
    var asanas = this.state.asanas.map(function(asana) {
      return <Asana key={asana.id} asana={asana} />;
    })

    return (
      <div>
        <h3>Asana Reference</h3>
        <div className="asanas">
          {asanas}
        </div>
      </div>
    );
  },

})

var SequenceSorter = React.createClass({

  // getInitialState: function() {
  //   return {
  //     seqAsanas: this.props.initialAsanas,
        // seqAsanasOrder: whatever is autogenerated (right now IDs)
  //   }
  // },


  componentDidMount: function() {
    $( "#sequence_asanas" ).sortable();

    // $.getJSON('/urltowherever', function(varForData) {
    //   if (this.isMounted()) {
    //     this.setState({
    //       asana1: asana.id,
    //       asana2: asana.id   can you iterate like this???? 
    //     })
    //   }
    // }.bind(this));

    // OR actually go through the asanas, grab the name, look up the ID it belongs 
    // to, and concatenate together to a string. Enact when Save button clicked.

    // (look up React's draggable extension!)

    // What we’re essentially doing is making an AJAX GET request to the new 
    // endpoint we just created (when we coded the story_category action and new
    // route). If we look at this code, we can see ‘setState’. This allows us to
    // change the state of this component, changing the value of the categoryName
    // variable we created in the getInitialState function.
  },


  render: function() {
    return <p> Drag and drop the asanas to reorder them.</p>
  }

})